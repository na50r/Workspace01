enum Stuff {

    ALPHA('alpha'),

    private final String value

    Stuff(String value) {
        this.value = value
    }

    @Override
    String toString() {
        return value
    }

}

@Library('shared-library') _
import org.foo.Hello


pipeline {
    agent any
    stages {
        stage('Print Env') {
            when {
                environment name: 'enum_test', value: Stuff.ALPHA.toString()
            }
            steps {
                println('Works')
                sh('env')
                sh('echo $global_trigger')
                Hello.sayHello()

            }
        }

        stage('Send Msg') {
            when {
                environment name: 'send_google', value: 'true'
            }
            steps {
                sendGoogleMsgV2(env.webhook_url, 'hi from groovy/http/restClient')
                script {
                    googleBot.sendMsgV2(env.webhook_url, 'hi from groovy/http/restClient')
                }
            }
        }

        stage('Hello') {
            steps {
                helloWorldV1(name: 'Name', dayOfWeek: 'Day')
            }
        }
        stage('Run') {
            steps {
                k8sDeleteJob('ws01-test-job')
                dir('Workspace01/kubernetes/jobs') {
                    k8sDeployLocal('Job5')
                    sleep(5)
                }
                k8sStreamLogs('ws01-test-job')
                k8sDeleteJob('ws01-test-job')
            }
        }

        stage('Run 2') {
            steps {
                script {
                    k8s.deleteJob('ws01-test-job')
                    dir('Workspace01/kubernetes/jobs') {
                        k8s.deployLocal('Job5')
                        sleep(5)
                    }
                    k8s.streamLogs('ws01-test-job')
                    k8s.deleteJob('ws01-test-job')
                }
            }
        }
    }
}
